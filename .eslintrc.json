{
  "extends": [
      "plugin:react/recommended",
      "airbnb-typescript",
      "plugin:prettier/recommended",
      "prettier"
  ],
  "rules": {
      "no-unused-vars": ["error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }],
      "react/prop-types": "off",
      "react/jsx-indent": [2, 2, { "checkAttributes": true }],
      "react/jsx-indent-props": [2, 2],
      "import/prefer-default-export": "off",
      "import/no-cycle": "off",
      "no-multi-assign": "off",
      "import/no-extraneous-dependencies": "off",
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1
        }
      ],
      "padded-blocks": [
        "error",
        "never"
      ],
      "curly": [
        "error",
        "all"
      ],
     "import/extensions": "off",
      "prettier/prettier": [
        "error",
        {
          "endOfLine": "auto"
        }
      ]
  },
  "settings": {
    "react": {
      "createClass": "createReactClass", // Regex for Component Factory to use,
                                         // default to "createReactClass"
      "pragma": "React",  // Pragma to use, default to "React"
      "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                           // default to latest and warns if missing
                           // It will default to "detect" in the future
      "flowVersion": "0.53" // Flow version
    },
    "propWrapperFunctions": [
        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        "forbidExtraProps",
        {"property": "freeze", "object": "Object"},
        {"property": "myFavoriteWrapper"},
        // for rules that check exact prop wrappers
        {"property": "forbidExtraProps", "exact": true}
    ],
    "componentWrapperFunctions": [
        // The name of any function used to wrap components, e.g. Mobx `observer` function. If this isn't set, components wrapped by these functions will be skipped.
        "observer", // `property`
        {"property": "styled"}, // `object` is optional
        {"property": "observer", "object": "Mobx"},
        {"property": "observer", "object": "<pragma>"} // sets `object` to whatever value `settings.react.pragma` is set to
    ],
    "formComponents": [
      // Components used as alternatives to <form> for forms, eg. <Form endpoint={ url } />
      "CustomForm",
      {"name": "Form", "formAttribute": "endpoint"}
    ],
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ],
    "import/parsers": {
        "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
        "typescript": {
          "node": {
            "extensions": [
              ".js",
              ".jsx",
              ".ts",
              ".tsx"
            ]
          }
        }
      }
  },
  "plugins": ["import", "jest-dom"],
  "globals": {
    "cy": true,
    "context": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "project": [
      "tsconfig.json"
    ],
    "sourceType": "module"
  },
  "ignorePatterns": [
    "next.config.js",
    "jest.config.js",
    "next-i18next.config.js",
    "**/test/jest.setup.ts",
    "**/test/mocks.ts",
    "i18n.js"
  ]
}